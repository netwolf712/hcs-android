/*
 * Copyright 2013 Chris Banes
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'maven-publish'
apply plugin: 'signing'

def toRemote = project.hasProperty('toRemote') ? Boolean.valueOf("${toRemote}") : false
println("publish to remote repositoryï¼š${toRemote}")

def isReleaseBuild() {
    return PROJECT_VERSION.contains("SNAPSHOT") == false
}

def getReleaseRepositoryUrl() {
    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
            : "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
}

def getSnapshotRepositoryUrl() {
    return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
            : "https://s01.oss.sonatype.org/content/repositories/snapshots/"
}

def getSonatypeUserName() {
    return hasProperty('SONATYPE_USERNAME') ? SONATYPE_USERNAME : ""
}

def getSonatypePassword() {
    return hasProperty('SONATYPE_PASSWORD') ? SONATYPE_PASSWORD : ""
}
signing {
    required { toRemote && !project.version.toString().endsWith("-SNAPSHOT")}
    sign publishing.publications
}

publishing {
    publications {
        release(MavenPublication) {
            groupId = PROJECT_GROUP
            artifactId = POM_ARTIFACT_ID
            version = PROJECT_VERSION
            artifact PROJECT_ARTIFACT
            pom {
                name = artifactId
                description = POM_DESCRIPTION
                url = POM_URL
                licenses {
                    license {
                        name = POM_LICENCE_NAME
                        url = POM_LICENCE_URL
                    }
                }
                developers {
                    developer {
                        id = POM_DEVELOPER_ID
                        name = POM_DEVELOPER_NAME
                    }
                }
                scm {
                    connection = POM_GIT_URL
                    developerConnection = POM_GIT_URL
                    url = POM_URL
                }
            }
        }
    }
    repositories {
        maven { url getReleaseRepositoryUrl()
            allowInsecureProtocol = true
            credentials {
                username getSonatypeUserName()
                password getSonatypePassword()
            }
        }
    }
}